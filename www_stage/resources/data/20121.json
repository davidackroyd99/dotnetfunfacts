{"id": 20121, "metadata": {"title": "Pattern Matching Switch", "contributors": "David Ackroyd", "created": "2020-03-08", "modified": "2020-03-08", "tags": [""], "\t\tcase SomeType someObj": "", "\t\tcase OtherType otherObj": "", "\t\tdefault": "", "\t\tcase SomeType someObj when someObj.SomeBoolean": "", "\t\tcase OtherType otherObj when otherObj.OtherBoolean": ""}, "body": "meta\n\n\n### Pattern Matching Switch\n\nC# 7 introduced support for pattern matching switch statements. \n\n\tswitch(obj)\n\t{\n\t\tcase SomeType someObj:\n\t\t\treturn someObj.SomeMethod();\n\t\tcase OtherType otherObj:\n\t\t\treturn otherObj.OtherMethod();\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\nWe can also use the `when` keyword to make our switch statements even more expressive. For example, this will only return the results of the methods when boolean properties on the objects are true.\n\n\tswitch(obj)\n\t{\n\t\tcase SomeType someObj when someObj.SomeBoolean:\n\t\t\treturn someObj.SomeMethod();\n\t\tcase OtherType otherObj when otherObj.OtherBoolean:\n\t\t\treturn otherObj.OtherMethod();\n\t\tdefault:\n\t\t\treturn null;\n\t}\n"}