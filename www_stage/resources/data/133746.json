{"id": 133746, "metadata": {"title": "A New Way To Format Strings", "contributors": "David Ackroyd", "created": "2020-03-08", "modified": "2020-03-08", "tags": [""], "With `String.Format`": "", "With string interpolation": "", "\t$@\"C": "\\Users\\{user.Name}\";"}, "body": "meta\n\n\n### A New Way To Format Strings\n\nFormatting strings (ie substituting placeholders for expressions) in C# used to be inflexible and difficult to read because of `String.Format`. Luckily, in C# 6 and above you can use string interpolation.\n\nWith `String.Format`:\n\n\tString.Format(\"Hello, {0}!\", expression);\n\nWith string interpolation:\n\n\t$\"Hello, {expression}!\";\n\nInterpolated string literals are identified by the `$` token. Verbatim literals (literals that do not interpret escape sequences like `\\t` for the tab character) can be also be interpolated.\n\n\t$@\"C:\\Users\\{user.Name}\";\n\n*N.B. It's best practice to put the `$` token before the `@` token as this is required in C# 6 and 7.*\n"}